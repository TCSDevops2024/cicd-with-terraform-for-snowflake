name: cicd to Snowflake with Terraform

on:
    pull_request:
      branches:
        - main
        - release/*
    push:
      branches:
        - main
        - release/*


jobs:
    security-scan-terraform-code:
        name: Security scan (terraform code)
        runs-on: ubuntu-latest
        steps:
          - name: Checkout repo
            uses: actions/checkout@v4

          - name: Run Checkov action
            id: checkov
            uses: bridgecrewio/checkov-action@master
            with:
              directory: .
              soft_fail: true
              download_external_modules: true
              framework: terraform
    preview-dev:
        if: github.base_ref == 'main' && github.event_name == 'pull_request'
        needs: security-scan-terraform-code
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-southeast-2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              id: terraform_init
              run: terraform -chdir=./dev init

            - name: Terraform Format
              id: fmt
              run: terraform -chdir=./dev fmt -recursive -check

            - name: Terraform Validate
              id: validate
              run: terraform -chdir=./dev validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform -chdir=./dev plan 
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}

    deploy-dev:
        if: github.ref == 'refs/heads/main' && github.event_name == 'push'
        needs: security-scan-terraform-code
        runs-on: ubuntu-latest
        environment: 'dev'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-southeast-2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              id: terraform_init
              run: terraform -chdir=./dev init

            - name: Terraform Format
              id: fmt
              run: terraform -chdir=./dev fmt -recursive -check

            - name: Terraform Validate
              id: validate
              run: terraform -chdir=./dev validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform -chdir=./dev plan 
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}

            - name: Terraform Apply
              id: apply
              run: terraform -chdir=./dev apply -auto-approve
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}

    preview-prod:
        if: startsWith(github.ref, 'refs/heads/release/')
        needs: security-scan-terraform-code
        runs-on: ubuntu-latest
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-southeast-2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              id: terraform_init
              run: terraform -chdir=./dev init

            - name: Terraform Format
              id: fmt
              run: terraform -chdir=./dev fmt -recursive -check

            - name: Terraform Validate
              id: validate
              run: terraform -chdir=./dev validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform -chdir=./prod plan 
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}

    deploy-prod:
        if: startsWith(github.ref, 'refs/heads/release/') && github.event_name == 'push'
        needs: preview-prod
        runs-on: ubuntu-latest
        environment: 'prod'
        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Configure AWS credentials
              uses: aws-actions/configure-aws-credentials@v4
              with:
                aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
                aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                aws-region: ap-southeast-2

            - name: Setup Terraform
              uses: hashicorp/setup-terraform@v3

            - name: Terraform Init
              id: terraform_init
              run: terraform -chdir=./dev init -reconfigure

            - name: Terraform Format
              id: fmt
              run: terraform -chdir=./dev fmt -recursive -check

            - name: Terraform Validate
              id: validate
              run: terraform -chdir=./dev validate -no-color

            - name: Terraform Plan
              id: plan
              run: terraform -chdir=./dev plan 
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}

            - name: Terraform Apply
              id: apply
              run: terraform -chdir=./prod apply -auto-approve
              env:
                TF_VAR_snowflake_private_key: ${{ secrets.SNOWFLAKE_PRIVATE_KEY }}
                TF_VAR_snowflake_password: ${{ secrets.SNOWFLAKE_PASSWORD }}
                TF_VAR_snowflake_user: ${{ secrets.SNOWFLAKE_USER }}
                TF_VAR_snowflake_account: ${{ secrets.SNOWFLAKE_ACCOUNT }}